{"version":3,"sources":["config/endpoints/main.endpoint.js","services/core-api.service.js","services/news.service.js","config/endpoints/news.endpoint.js","components/pages/home/home.js","components/routers/main-router.js","App.js","index.js"],"names":["baseUrl","apiRequest","url","method","data","params","headers","validateStatus","axios","baseURL","NewsService","label","name","value","setCountries","setForm","then","response","length","initObject","Tweetid","ID","temp","push","map","e","text","Text","DateTime","Datetime","tweetID","Tweet_Id","id","_id","catch","setlabels","this","status","console","log","Home","useEffect","useState","countryList","setcountryList","labels","undefined","newsService","setnewsService","getNews","getLabels","handleClick","a","addLabel","obj","addLabels","Fragment","className","row","index","align","onChange","val","target","item","type","onClick","MainRouter","exact","path","component","App","useLocation","warn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.588cb5bc.chunk.js","sourcesContent":["const baseUrl=\"http://localhost:4000/api/\";\r\n\r\nexport {baseUrl};","import axios from 'axios';\r\nimport { baseUrl } from '../config/endpoints/main.endpoint';\r\n\r\nconst sampleFn=()=>undefined;\r\n\r\nconst apiRequest=(url=\"\",method=\"GET\",data={},params={},headers={},validateStatus=()=>true)=>axios({\r\n    baseURL:baseUrl,\r\n    method,\r\n    url,\r\n    params,\r\n    headers,\r\n    data,\r\n    validateStatus\r\n});\r\n\r\nconst apiRequsetWithFormDataWithToken=(url = \"\",method=\"\",data={},params={},setAlert=sampleFn,setAuth=sampleFn)=>{\r\n    console.log(url)\r\n    const token = localStorage.getItem(\"jwt\");\r\n    let headers={\r\n           Authorization:`Bearer ${token}`,\r\n           \"Content-Type\":'multipart/form-data'\r\n        }\r\n    return apiRequest(url,method,data,params,headers,(status)=>{\r\n        if(status===401){\r\n            setAuth(false);\r\n            setAlert('Failed','Unauthrized Access','error');\r\n        }\r\n\r\n        return true\r\n    });\r\n\r\n\r\n}\r\n\r\nconst apiRequestWithToken=(url=\"\",method=\"\",data={},params={},setAlert=sampleFn,setAuth=sampleFn)=>{\r\n    const token = localStorage.getItem(\"jwt\");\r\n    let headers={\r\n           Authorization:`Bearer ${token}`\r\n        }\r\n    return apiRequest(url,method,data,params,headers,(status)=>{\r\n        if(status===401){\r\n            setAuth(false);\r\n            setAlert('Failed','Unauthrized Access','error');\r\n        }\r\n\r\n        return true\r\n    });\r\n}\r\nexport {apiRequest,apiRequestWithToken,apiRequsetWithFormDataWithToken}","import {\r\n    getNews,\r\n    addLabels\r\n    \r\n} from '../config/endpoints/news.endpoint'\r\n\r\nimport { apiRequest } from \"./core-api.service\";\r\n\r\nclass NewsService{\r\n\r\nlabel = [\r\n    {name: \"Real\", value: \"0\"},\r\n    {name: \"Fake\", value: \"1\"},\r\n    {name: \"Not_Assigned\", value: \"-1\"}\r\n\r\n    ]\r\n\r\n    getNews(setCountries,setForm){\r\n        apiRequest(getNews,\"GET\").then((response)=>{\r\n            if(response&&response.data&&response.data.data&&(response.data.data.length>0)){\r\n                const initObject = {\r\n                    Tweetid: '',\r\n                    label: '',\r\n                    ID:'',\r\n                };\r\n            \r\n                let temp=[];\r\n                for(let val of response.data.data){\r\n                    temp.push(initObject);\r\n                }\r\n                // console.log(temp)\r\n                \r\n                setCountries(response.data.data.map(e=>{\r\n                    return {\r\n                        text:e.Text,\r\n                        DateTime:e.Datetime,\r\n                        tweetID:e.Tweet_Id,\r\n                        label:e.label,\r\n                        id:e._id,\r\n                    }\r\n                }))\r\n                setForm(temp);\r\n\r\n            }\r\n        }).catch(()=>{\r\n            // this.setLoader(false);\r\n        })\r\n    }\r\n\r\n    getLabels(setlabels){\r\n\r\n        setlabels(this.label.map(e=>{\r\n            return {\r\n                name:e.name,\r\n                value:e.value,\r\n            }\r\n        }))\r\n\r\n            \r\n    }\r\n\r\n    addLabels(data){\r\n        // console.log(data)\r\n        apiRequest(addLabels,'POST',data).then(response=>{\r\n            // console.log(response)\r\n            if(response.data.status){\r\n                console.log(\"Labelling Successful\")\r\n            }else{\r\n                console.log(\"Labelling Unsuccessful\")}\r\n        }).catch(()=>{\r\n            console.log(\"Something Went Wrong\")})\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport {NewsService};","\r\nconst getNews =`news/getnews`;\r\nconst addLabels=`news/addlabels`;\r\n\r\n\r\nexport{ getNews, addLabels };\r\n","import React, { useEffect, useState } from 'react'\r\nimport { apiRequest } from '../../../services/core-api.service';\r\nimport { baseUrl } from '../../../config/endpoints/main.endpoint';\r\n\r\nimport { NewsService } from '../../../services/news.service';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    useEffect(() => {\r\n        apiRequest(`${baseUrl}count`)\r\n    }, [])\r\n\r\n    const initObject = {\r\n        Tweetid: '',\r\n        label: '',\r\n        \r\n    };\r\n\r\n    const [countryList, setcountryList] = useState([]);\r\n    const [labels, setlabels] = useState([]);\r\n    const [newsService, setnewsService] = useState(undefined);\r\n    const [form, setForm] = useState([]);\r\n    const [errors, setErrors] = useState(initObject);\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        setnewsService(new NewsService());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (newsService) {\r\n            newsService.getNews(setcountryList,setForm)\r\n        }\r\n    }, [newsService]);\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n    }, [countryList]);\r\n\r\n    useEffect(() => {\r\n        if (newsService) {\r\n            newsService.getLabels(setlabels)\r\n        }\r\n    }, [newsService]);\r\n\r\n\r\n    //load more news\r\n    const handleClick = async () => {\r\n        // console.log(countryList)\r\n        newsService.getNews(setcountryList)\r\n\r\n    }\r\n\r\n    const addLabel = async (label,id) => {\r\n        const obj = {id,label}\r\n        newsService.addLabels(obj)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <div className=\"container-fluid home-division-1\">\r\n                <div className=\"row \" > \r\n\r\n                    <div className=\"container-fluid\"> \r\n                        <div className=\"row justify-content-center heading\">\r\n                            <h3> NEWS ANNOTATOR</h3>\r\n                        </div>\r\n                        <hr />\r\n                           <div className=\"row\">\r\n                               <div className=\"col-md-8\">\r\n                                   <div className=\"card card1\">\r\n                                        <table className=\"table table-hover table1\">\r\n                                            <thead className=\"thead-dark justify-content-center\">\r\n                                                <tr>\r\n                                                    <th className=\"text-col\">News Text</th>\r\n                                                    <th className=\"date-col\">Posted Date</th>\r\n                                                    <th>Label</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {countryList.map((row,index) => (\r\n                                                    <tr key={row.id}>\r\n                                                    \r\n                                                        <td align=\"right\">{row.text}</td>\r\n                                                        <td align=\"right\">{row.DateTime}</td>\r\n                                                        <td>\r\n\r\n                                                        <select \r\n                                                            \r\n                                                            id=\"select-box\"  \r\n                                                            onChange={(val)=>addLabel(val.target.value,row.id)}\r\n                                                            className={`form-control`}\r\n                                                        >\r\n                                                            <option className={`select-option`} value={\"\"} key={index} >Select Label</option>\r\n                                                        \r\n                                                            {\r\n                                                                labels.map((item,index)=>{\r\n                                                                    return (\r\n                                                                        <option className={`select-option`} value={item.value} key={index} >{item.name}</option>\r\n                                                                    );\r\n                                                                })\r\n                                                            }\r\n                                                        </select>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                            \r\n            \r\n                            <div className=\"col-md-4 \">\r\n                                <div className=\"intro\">\r\n                                    <div className=\"row \">\r\n                                            <button type=\"button\" className=\"btn1\"\r\n                                                onClick={handleClick}\r\n                                            >Load More</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <div className=\"card card2\">\r\n                                            <div className=\"container\">\r\n                                            <div className=\"row justify-content-center\">\r\n                                                <div className=\"intro-head\">\r\n                                                    INSTRUCTIONS\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <div className=\"row justify-content-center\">\r\n                                                <div className=\"intro-content\">\r\n                                                    <br/>\r\n                                                    <ul>\r\n                                                        <li><p>Select the most appropriate label for the news text given using the dropdown</p></li>\r\n                                                        <li><p>Take the Posted date into consideration when deciding your selection</p></li>\r\n                                                        <li><p>Mark \"Not Assigned\" in case of content is not a news or undecidable</p></li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                \r\n                    \r\n                            </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n         \r\n\r\n                    \r\n\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport { Home };\r\n","import React, { useContext } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Home } from '../pages/home/home';\r\n\r\n\r\nconst MainRouter = () => {\r\n  return (\r\n    <div >\r\n      <Switch>\r\n\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { MainRouter };\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport { MainRouter } from './components/routers/main-router';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { liveServer } from './config/endpoints/main.endpoint';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  \r\n\r\n  const  [socket,setSocket]=useState(null);\r\n  let location = useLocation();\r\n\r\n  // useEffect(() => {\r\n  //   if(auth.isLogged){\r\n  //     const temp=socketIOClient(`${liveServer}/user`,{transports: ['websocket']});\r\n  //     let token=localStorage.getItem(\"jwt\")\r\n  //     temp.emit(\"userToken\",token)\r\n  //     setSocket(temp);  \r\n  //   }else if(socket){\r\n  //     socket?.close()\r\n  //   }\r\n  // }, [auth])\r\n\r\n\r\n  // useEffect(() => {\r\n    \r\n  //   let images=document.getElementsByTagName(\"img\");\r\n  //   let i=0,length=images.length;\r\n  //   let a=Date.now();\r\n  //   console.log(length);\r\n  //   if(length>0){\r\n  //     setImgLoader(true)\r\n  //   }\r\n  //   console.log(images)\r\n  //   for(let element of images){\r\n  //     console.log(element)\r\n  //     element.addEventListener('onLoad',()=>{\r\n  //       console.log(i)\r\n  //       i++;\r\n  //       if(i===length){\r\n  //         let b=Date.now()\r\n  //         console.log(b-a);\r\n  //         console.log(\"loaded\") \r\n  //         setImgLoader(false);\r\n  //       }\r\n  //     })\r\n  //   }\r\n  // }, [location.pathname])\r\n\r\n\r\n  console.warn=()=>undefined;\r\n  // console.log=()=>undefined;\r\n\r\n  return <MainRouter />;\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n            <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}